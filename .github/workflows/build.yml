name: Build and Package GenEvolve3D Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-package:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Cache Python Dependencies
        uses: actions/cache@v2
        with:
          path: ~/AppData/Local/pip/Cache
          key: python-dependencies-${{ hashFiles('**/requirements.txt') }}
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Create and Activate Python Virtual Environment
        run: |
          python -m venv venv
          .\venv\Scripts\Activate
          python -m pip install --upgrade pip
        shell: pwsh

      - name: Prepare Build Environment
        run: |
          $repoPath = "${{ github.workspace }}/repo"
          $srcPath = "${repoPath}/src"
          $buildPath = "${srcPath}/build/exe.win-amd64-3.9"
          $targetPath = "${{ github.workspace }}/GenEvolve3D"
          
          # Ensure the necessary directory structure exists
          if (-not (Test-Path $srcPath)) {
            Write-Host "Creating 'src' directory..."
            New-Item -ItemType Directory -Path $srcPath -Force
          }
          if (-not (Test-Path $buildPath)) {
            Write-Host "Creating 'build/exe.win-amd64-3.9' directory..."
            New-Item -ItemType Directory -Path $buildPath -Force
          }
          if (-not (Test-Path $targetPath)) {
            Write-Host "Creating 'GenEvolve3D' directory..."
            New-Item -ItemType Directory -Path $targetPath -Force
          }
          
          # Copy the repository contents to the src directory
          Write-Host "Copying repository contents to 'src' directory..."
          Get-ChildItem -Recurse "${repoPath}/." | ForEach-Object {
            $copyTarget = $_.FullName -replace [regex]::Escape($repoPath), $srcPath
            if (-not (Test-Path $copyTarget)) {
              Copy-Item -Path $_.FullName -Destination $copyTarget -Force
            }
          }
        shell: pwsh

      - name: Install Dependencies
        run: pip install pyqt5 -r requirements.txt cx_Freeze vispy
        shell: pwsh

      - name: Build Application
        run: python ${{ github.workspace }}/src/setup.py build
        shell: pwsh

      - name: Copy Executable
        run: |
          $srcPath = "${{ github.workspace }}/repo/src"
          $buildPath = "${{ github.workspace }}/repo/src/build/exe.win-amd64-3.9"
          $executablePath = Join-Path $buildPath 'main.exe'
          $targetPath = "${{ github.workspace }}/GenEvolve3D"
          
          Write-Host "Copying executable to 'GenEvolve3D' directory..."
          Copy-Item $executablePath -Destination $targetPath -Force
        shell: pwsh

      - name: Package Executable
        run: |
          .\venv\Scripts\Activate
          $installDir = "${env:PROGRAMFILES}\GenEvolve3D"
          
          Write-Host "Contents of 'GenEvolve3D' directory:"
          Get-ChildItem -Path $installDir
          
          Compress-Archive -Path "${installDir}\*" -DestinationPath "${{ github.workspace }}/GenEvolve3D.zip"
          Write-Host "Executable packaged successfully."
        shell: pwsh

      - name: Upload Packaged Application
        if: Test-Path "${{ github.workspace }}/GenEvolve3D.zip"
        uses: actions/upload-artifact@v2
        with:
          name: GenEvolve3D
          path: GenEvolve3D.zip
