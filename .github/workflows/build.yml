name: Build and Package GenEvolve3D Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-package:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Cache Python Dependencies
        uses: actions/cache@v2
        with:
          path: ~/AppData/Local/pip/Cache
          key: python-dependencies-${{ hashFiles('**/requirements.txt') }}
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Create and Activate Python Virtual Environment
        run: |
          python -m venv venv
          .\venv\Scripts\Activate
          python -m pip install --upgrade pip
        shell: pwsh

      - name: Install Dependencies
        run: |
          # Install PyQt5 and other dependencies
          pip install pyqt5 -r requirements.txt cx_Freeze vispy
        shell: pwsh

      - name: Build Application
        run: |
          # Change to the source directory and build the application
          cd ${{ github.workspace }}/src
          python setup.py build
        shell: pwsh

      - name: Package Executable
        run: |
          # Activate virtual environment and package the executable
          .\venv\Scripts\Activate
          $buildPath = "${{ github.workspace }}/src/build/exe.win-amd64-3.9"
          $executablePath = Join-Path $buildPath 'main.exe'
          $installDir = "${env:PROGRAMFILES}\GenEvolve3D"

          # Debugging: Print the current working directory
          Write-Host ("Current working directory: " + (Get-Location))

          # Debugging: Print the contents of the buildPath
          Write-Host ("Contents of ${buildPath}:")
          Get-ChildItem -Path $buildPath -ErrorAction SilentlyContinue

          if (Test-Path $executablePath) {
            # Copy executable to the installation directory
            Copy-Item $executablePath -Destination $installDir -Force

            # Debugging: Print the contents of the installation directory
            Write-Host ("Contents of ${installDir}:")
            Get-ChildItem -Path $installDir

            # Debugging: Print the contents of the zip file
            $zipPath = "${installDir}\GenEvolve3D.zip"
            Write-Host ("Contents of ${zipPath}:")
            Get-ChildItem -Path "${installDir}\*.zip"

            # Compress the installation directory
            Compress-Archive -Path "${installDir}\*" -DestinationPath "${installDir}\GenEvolve3D.zip"
            Write-Host "Executable packaged successfully."
          } else {
            Write-Host ("Executable not found at ${executablePath}. Exiting...")
            exit 1
          }
        shell: pwsh

      - name: Upload Packaged Application
        uses: actions/upload-artifact@v2
        with:
          name: GenEvolve3D
          path: GenEvolve3D.zip

      - name: Update Installer Script
        run: |
          # Update the NSIS installer script with the correct executable name
          (Get-Content .github/workflows/installer.nsi) -replace 'GenEvolve3D.exe', 'main.exe' | Set-Content .github/workflows/installer.nsi
        shell: pwsh

      - name: Create and Upload Installer
        run: |
          # Create installer using NSIS and upload
          makensis .github/workflows/installer.nsi
          mv GenEvolve3D-Setup.exe GenEvolve3D-Installer.exe
        shell: pwsh

      - name: Upload Installer
        uses: actions/upload-artifact@v2
        with:
          name: GenEvolve3D-Installer
          path: GenEvolve3D-Installer.exe
