name: Build and Package GenEvolve3D Application

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-package:
    runs-on: windows-latest
    env:
      PYTHON_VERSION: '3.9'
      VENV_PATH: D:\a\GenEvolve3D\GenEvolve3D\venv
      PYTHON_PATH: D:\a\GenEvolve3D\GenEvolve3D\src
      INSTALLER_NAME: GenEvolve3D-Installer
      EXECUTABLE_NAME: GenEvolve3D
      QT_API: pyqt5  # Set the QT_API environment variable

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create Virtual Environment
        run: python -m venv ${{ env.VENV_PATH }}
        shell: pwsh

      - name: Activate Virtual Environment and Install Dependencies
        run: |
          . ${{ env.VENV_PATH }}\Scripts\Activate
          python -m pip install --upgrade pip
          pip install --upgrade numpy pyface traits mayavi vtk pyinstaller PyQt5
        shell: pwsh

      - name: Install Build Tools and NSIS
        run: |
          choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64"
          choco install nsis -y
        shell: pwsh

      - name: Build Executable with PyInstaller
        run: |
          pyinstaller --onefile --noconsole --paths $env:PYTHON_PATH --name $env:EXECUTABLE_NAME --distpath ${{ github.workspace }} $env:PYTHON_PATH\main.py `
          --hidden-import traitsui --hidden-import pyface.ui.null `
          --hidden-import traitsui.toolkits --hidden-import pyface.ui.qt4 `
          --hidden-import pyface.toolkits.qt4 --hidden-import traitsui.qt4 --hidden-import PyQt5
        shell: pwsh

      - name: Verify Executable Creation
        run: |
          if (Test-Path "${{ github.workspace }}\${{ env.EXECUTABLE_NAME }}.exe") {
            echo "Executable found."
          } else {
            echo "Executable not found. Exiting..."
            exit 1
          }
        shell: pwsh

      - name: Copy Executable to NSIS Script Location
        run: |
          Copy-Item "${{ github.workspace }}/${{ env.EXECUTABLE_NAME }}.exe" "${{ github.workspace }}/.github/workflows/"
        shell: pwsh

      - name: Package Executable as Installer
        run: |
          makensis ${{ github.workspace }}/.github/workflows/installer.nsi
        shell: cmd

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.INSTALLER_NAME }}
          path: ${{ github.workspace }}/.github/workflows/${{ env.EXECUTABLE_NAME }}-Setup.exe
