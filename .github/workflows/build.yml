name: Build and Package GenEvolve3D Application

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-package:
    runs-on: windows-latest
    env:
      PYTHON_VERSION: 3.9
      VENV_PATH: D:/a/GenEvolve3D/GenEvolve3D/venv
      PYTHON_PATH: D:/a/GenEvolve3D/GenEvolve3D/src
      INSTALLER_NAME: GenEvolve3D-Installer
      EXECUTABLE_NAME: GenEvolve3D
      pythonLocation: C:/hostedtoolcache/windows/Python/3.9.13/x64
      DEPENDENCY_CACHE_KEY: 'python-dependencies-${{ hashFiles('**/requirements.txt') }}'
      BUILD_PATH: build/exe.win-amd64-3.9
      NSIS_SCRIPT_PATH: installer.nsi

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python Dependencies
        uses: actions/cache@v2
        with:
          path: ~/AppData/Local/pip/Cache
          key: ${{ env.DEPENDENCY_CACHE_KEY }}

      - name: Create Virtual Environment and Install Dependencies
        run: |
          python -m venv ${{ env.VENV_PATH }}
          & ${{ env.VENV_PATH }}/Scripts/Activate
          python -m pip install --upgrade pip
          pip install numpy pyface traits mayavi vtk cx_Freeze pythreejs
        shell: pwsh

      - name: Prepare Build Environment and Build Application
        run: |
          & ${{ env.VENV_PATH }}/Scripts/Activate
          echo "from cx_Freeze import setup, Executable" > setup.py
          echo "setup(name='${{ env.EXECUTABLE_NAME }}', version='0.1', description='GenEvolve3D Application', executables=[Executable('${{ env.PYTHON_PATH }}/main.py')])" >> setup.py
          python setup.py build
        shell: pwsh

      - name: Verify and Package Executable
        run: |
          & ${{ env.VENV_PATH }}/Scripts/Activate
          if (Test-Path "${{ env.BUILD_PATH }}/${{ env.EXECUTABLE_NAME }}.exe") {
            echo "Executable found. Packaging..."
            Compress-Archive -Path "${{ env.BUILD_PATH }}/*" -DestinationPath "${{ env.EXECUTABLE_NAME }}.zip"
          } else {
            echo "Executable not found. Exiting..."
            exit 1
          }
        shell: pwsh

      - name: Upload Packaged Application
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.EXECUTABLE_NAME }}
          path: ${{ env.EXECUTABLE_NAME }}.zip

      - name: Create and Upload Installer
        run: |
          $nsiScript = @'
          !include "MUI2.nsh"
          Name "GenEvolve3D"
          OutFile "GenEvolve3D-Setup.exe"
          InstallDir "$PROGRAMFILES\GenEvolve3D"
          ShowInstDetails show
          ShowUnInstDetails show
          !insertmacro MUI_PAGE_WELCOME
          !insertmacro MUI_PAGE_DIRECTORY
          !insertmacro MUI_PAGE_INSTFILES
          !insertmacro MUI_PAGE_FINISH
          !insertmacro MUI_LANGUAGE "English"
          Section "Install"
              SetOutPath "$INSTDIR"
              File '${{ env.BUILD_PATH }}/${{ env.EXECUTABLE_NAME }}.exe'
              CreateDirectory "$SMPROGRAMS\GenEvolve3D"
              CreateShortCut "$SMPROGRAMS\GenEvolve3D\GenEvolve3D.lnk" "$INSTDIR\${{ env.EXECUTABLE_NAME }}.exe"
              WriteUninstaller "$INSTDIR\Uninstall.exe"
          SectionEnd
          Section "Uninstall"
              Delete "$INSTDIR\${{ env.EXECUTABLE_NAME }}.exe"
              Delete "$SMPROGRAMS\GenEvolve3D\GenEvolve3D.lnk"
              Delete "$INSTDIR\Uninstall.exe"
              RMDir "$SMPROGRAMS\GenEvolve3D"
              RMDir "$INSTDIR"
          SectionEnd
          '@
          Set-Content -Path ${{ env.NSIS_SCRIPT_PATH }} -Value $nsiScript
          makensis ${{ env.NSIS_SCRIPT_PATH }}
        shell: pwsh

      - name: Upload Installer
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.INSTALLER_NAME }}
          path: GenEvolve3D-Setup.exe
