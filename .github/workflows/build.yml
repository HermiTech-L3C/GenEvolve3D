name: Build and Package GenEvolve3D Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-package:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Cache Python Dependencies
        uses: actions/cache@v2
        with:
          path: ~/AppData/Local/pip/Cache
          key: python-dependencies-${{ hashFiles('**/requirements.txt') }}
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Create and Activate Python Virtual Environment
        run: |
          python -m venv venv
          .\venv\Scripts\Activate
          python -m pip install --upgrade pip
        shell: pwsh

      - name: Prepare Build Environment
        run: |
          $repoPath = "${{ github.workspace }}/repo"
          $srcPath = "${repoPath}/src"
          $buildPath = "${srcPath}/build/exe.win-amd64-3.9"

          # Ensure the necessary directory structure exists
          if (-not (Test-Path $srcPath)) {
            Write-Host "Creating 'src' directory..."
            New-Item -ItemType Directory -Path $srcPath -Force
          }

          if (-not (Test-Path $buildPath)) {
            Write-Host "Creating 'build/exe.win-amd64-3.9' directory..."
            New-Item -ItemType Directory -Path $buildPath -Force
          }

          # Copy the repository contents to the src directory
          Write-Host "Copying repository contents to 'src' directory..."
          Copy-Item -Recurse -Force "${repoPath}/." $srcPath
        shell: pwsh

      - name: Install Dependencies
        run: pip install pyqt5 -r requirements.txt cx_Freeze vispy
        shell: pwsh

      - name: Build Application
        run: python ${{ github.workspace }}/src/setup.py build
        shell: pwsh

      - name: Package Executable
        run: |
          .\venv\Scripts\Activate
          $executablePath = Join-Path $buildPath 'main.exe'
          $installDir = "${env:PROGRAMFILES}\GenEvolve3D"
          Write-Host "Contents of ${buildPath}:"
          Get-ChildItem -Path $buildPath -ErrorAction SilentlyContinue
          if (Test-Path $executablePath) {
            Copy-Item $executablePath -Destination $installDir -Force
            Write-Host "Contents of ${installDir}:"
            Get-ChildItem -Path $installDir
            Compress-Archive -Path "${installDir}\*" -DestinationPath "${{ github.workspace }}/GenEvolve3D.zip"
            Write-Host "Executable packaged successfully."
          } else {
            Write-Host "Executable not found at ${executablePath}. Exiting..."
            exit 1
          }
        shell: pwsh

      - name: Upload Packaged Application
        if: Test-Path "${{ github.workspace }}/GenEvolve3D.zip"
        uses: actions/upload-artifact@v2
        with:
          name: GenEvolve3D
          path: GenEvolve3D.zip

      - name: Create and Upload Installer
        run: |
          Write-Output "Updating NSIS script"
          $nsisScriptPath = "${{ github.workspace }}\.github\workflows\installer.nsi"
          if (Test-Path $nsisScriptPath) {
            (Get-Content $nsisScriptPath) | ForEach-Object {
              $_ -replace '\$INSTDIR\\GenEvolve3D\.exe', '\$INSTDIR\\main.exe'
            } | Set-Content $nsisScriptPath
            Write-Output "Running NSIS to create installer"
            Start-Process "C:\Program Files (x86)\NSIS\makensis.exe" -ArgumentList $nsisScriptPath -Wait
          } else {
            Write-Output "NSIS script not found at ${nsisScriptPath}. Exiting..."
            exit 1
          }
        shell: pwsh

      - name: Upload Installer
        if: Test-Path "${{ github.workspace }}/GenEvolve3D-Setup.exe"
        uses: actions/upload-artifact@v2
        with:
          name: GenEvolve3D-Installer
          path: GenEvolve3D-Setup.exe
