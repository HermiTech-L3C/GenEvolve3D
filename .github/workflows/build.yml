name: Build and Package GenEvolve3D Application

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-package:
    runs-on: windows-latest
    env:
      PYTHON_VERSION: 3.9
      VENV_PATH: D:\a\GenEvolve3D\GenEvolve3D\venv
      PYTHON_PATH: D:\a\GenEvolve3D\GenEvolve3D\src
      INSTALLER_NAME: GenEvolve3D-Installer
      EXECUTABLE_NAME: GenEvolve3D
      pythonLocation: C:\hostedtoolcache\windows\Python\3.9.13\x64

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create Virtual Environment
        run: python -m venv ${{ env.VENV_PATH }}
        shell: pwsh

      - name: Activate Virtual Environment and Install Dependencies
        run: |
          . ${{ env.VENV_PATH }}\Scripts\Activate
          python -m pip install --upgrade pip
          pip install numpy pyface traits mayavi vtk cx_Freeze pythreejs
        shell: pwsh

      - name: Create cx_Freeze Setup Script
        run: |
          echo "from cx_Freeze import setup, Executable" > setup.py
          echo "setup(name='${{ env.EXECUTABLE_NAME }}', version='0.1', description='GenEvolve3D Application', executables=[Executable('${{ env.PYTHON_PATH }}/main.py')])" >> setup.py
        shell: pwsh

      - name: Build Executable with cx_Freeze
        run: |
          . ${{ env.VENV_PATH }}\Scripts\Activate
          python setup.py build
        shell: pwsh

      - name: Verify Executable Creation
        run: |
          if (Test-Path "build/exe.win-amd64-3.9/${{ env.EXECUTABLE_NAME }}.exe") {
            echo "Executable found."
          } else {
            echo "Executable not found. Exiting..."
            exit 1
          }
        shell: pwsh

      - name: Zip Application Build
        run: |
          Compress-Archive -Path "build/exe.win-amd64-3.9/*" -DestinationPath "${{ env.EXECUTABLE_NAME }}.zip"
        shell: pwsh

      - name: Upload Zipped Application
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.EXECUTABLE_NAME }}
          path: ${{ env.EXECUTABLE_NAME }}.zip
